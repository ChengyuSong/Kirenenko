// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rgd.proto

#include "rgd.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_rgd_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_JitRequest_rgd_2eproto;
namespace rgd {
class JitCmdv2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JitCmdv2> _instance;
} _JitCmdv2_default_instance_;
class JitCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JitCmd> _instance;
} _JitCmd_default_instance_;
class JitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JitRequest> _instance;
} _JitRequest_default_instance_;
class JitReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JitReply> _instance;
} _JitReply_default_instance_;
}  // namespace rgd
static void InitDefaultsJitCmdv2_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_JitCmdv2_default_instance_;
    new (ptr) ::rgd::JitCmdv2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::JitCmdv2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JitCmdv2_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJitCmdv2_rgd_2eproto}, {
      &scc_info_JitRequest_rgd_2eproto.base,}};

static void InitDefaultsJitCmd_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_JitCmd_default_instance_;
    new (ptr) ::rgd::JitCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::JitCmd::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JitCmd_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJitCmd_rgd_2eproto}, {}};

static void InitDefaultsJitRequest_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_JitRequest_default_instance_;
    new (ptr) ::rgd::JitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::JitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JitRequest_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJitRequest_rgd_2eproto}, {}};

static void InitDefaultsJitReply_rgd_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rgd::_JitReply_default_instance_;
    new (ptr) ::rgd::JitReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rgd::JitReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JitReply_rgd_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJitReply_rgd_2eproto}, {}};

void InitDefaults_rgd_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_JitCmdv2_rgd_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JitCmd_rgd_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JitRequest_rgd_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JitReply_rgd_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_rgd_2eproto[4];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_rgd_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_rgd_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_rgd_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, cmd_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, test_value_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmdv2, expr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmd, cmd_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitCmd, test_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, kind_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, boolvalue_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, bits_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, value_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, children_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, name_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, index_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, label_),
  PROTOBUF_FIELD_OFFSET(::rgd::JitRequest, hash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::rgd::JitReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::rgd::JitReply, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::rgd::JitCmdv2)},
  { 8, -1, sizeof(::rgd::JitCmd)},
  { 15, -1, sizeof(::rgd::JitRequest)},
  { 29, -1, sizeof(::rgd::JitReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::rgd::_JitCmdv2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rgd::_JitCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rgd::_JitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rgd::_JitReply_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_rgd_2eproto = {
  {}, AddDescriptors_rgd_2eproto, "rgd.proto", schemas,
  file_default_instances, TableStruct_rgd_2eproto::offsets,
  file_level_metadata_rgd_2eproto, 4, file_level_enum_descriptors_rgd_2eproto, file_level_service_descriptors_rgd_2eproto,
};

const char descriptor_table_protodef_rgd_2eproto[] =
  "\n\trgd.proto\022\003rgd\"J\n\010JitCmdv2\022\013\n\003cmd\030\001 \001("
  "\r\022\022\n\ntest_value\030\002 \001(\005\022\035\n\004expr\030\003 \003(\0132\017.rg"
  "d.JitRequest\")\n\006JitCmd\022\013\n\003cmd\030\001 \001(\r\022\022\n\nt"
  "est_value\030\002 \001(\005\"\247\001\n\nJitRequest\022\014\n\004kind\030\001"
  " \001(\r\022\021\n\tboolvalue\030\002 \001(\r\022\014\n\004bits\030\003 \001(\r\022\r\n"
  "\005value\030\004 \001(\t\022!\n\010children\030\005 \003(\0132\017.rgd.Jit"
  "Request\022\014\n\004name\030\006 \001(\t\022\r\n\005index\030\007 \001(\r\022\r\n\005"
  "label\030\010 \001(\r\022\014\n\004hash\030\t \001(\r\"\033\n\010JitReply\022\017\n"
  "\007message\030\001 \001(\t2\217\001\n\003RGD\0222\n\016sendExpression"
  "\022\017.rgd.JitRequest\032\r.rgd.JitReply\"\000\022\'\n\007se"
  "ndCmd\022\013.rgd.JitCmd\032\r.rgd.JitReply\"\000\022+\n\ts"
  "endCmdv2\022\r.rgd.JitCmdv2\032\r.rgd.JitReply\"\000"
  "b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_rgd_2eproto = {
  false, InitDefaults_rgd_2eproto, 
  descriptor_table_protodef_rgd_2eproto,
  "rgd.proto", &assign_descriptors_table_rgd_2eproto, 488,
};

void AddDescriptors_rgd_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_rgd_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_rgd_2eproto = []() { AddDescriptors_rgd_2eproto(); return true; }();
namespace rgd {

// ===================================================================

void JitCmdv2::InitAsDefaultInstance() {
}
class JitCmdv2::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JitCmdv2::kCmdFieldNumber;
const int JitCmdv2::kTestValueFieldNumber;
const int JitCmdv2::kExprFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JitCmdv2::JitCmdv2()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rgd.JitCmdv2)
}
JitCmdv2::JitCmdv2(const JitCmdv2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      expr_(from.expr_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&test_value_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(test_value_));
  // @@protoc_insertion_point(copy_constructor:rgd.JitCmdv2)
}

void JitCmdv2::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_JitCmdv2_rgd_2eproto.base);
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_value_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(test_value_));
}

JitCmdv2::~JitCmdv2() {
  // @@protoc_insertion_point(destructor:rgd.JitCmdv2)
  SharedDtor();
}

void JitCmdv2::SharedDtor() {
}

void JitCmdv2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JitCmdv2& JitCmdv2::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_JitCmdv2_rgd_2eproto.base);
  return *internal_default_instance();
}


void JitCmdv2::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.JitCmdv2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expr_.Clear();
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_value_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(test_value_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* JitCmdv2::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<JitCmdv2*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 cmd = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_cmd(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 test_value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_test_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated .rgd.JitRequest expr = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::rgd::JitRequest::_InternalParse;
          object = msg->add_expr();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool JitCmdv2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rgd.JitCmdv2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 test_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &test_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rgd.JitRequest expr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_expr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rgd.JitCmdv2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rgd.JitCmdv2)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void JitCmdv2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rgd.JitCmdv2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmd(), output);
  }

  // int32 test_value = 2;
  if (this->test_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->test_value(), output);
  }

  // repeated .rgd.JitRequest expr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expr_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->expr(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:rgd.JitCmdv2)
}

::google::protobuf::uint8* JitCmdv2::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.JitCmdv2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmd(), target);
  }

  // int32 test_value = 2;
  if (this->test_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->test_value(), target);
  }

  // repeated .rgd.JitRequest expr = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->expr_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->expr(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.JitCmdv2)
  return target;
}

size_t JitCmdv2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.JitCmdv2)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .rgd.JitRequest expr = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->expr_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->expr(static_cast<int>(i)));
    }
  }

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmd());
  }

  // int32 test_value = 2;
  if (this->test_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->test_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JitCmdv2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.JitCmdv2)
  GOOGLE_DCHECK_NE(&from, this);
  const JitCmdv2* source =
      ::google::protobuf::DynamicCastToGenerated<JitCmdv2>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.JitCmdv2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.JitCmdv2)
    MergeFrom(*source);
  }
}

void JitCmdv2::MergeFrom(const JitCmdv2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.JitCmdv2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  expr_.MergeFrom(from.expr_);
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.test_value() != 0) {
    set_test_value(from.test_value());
  }
}

void JitCmdv2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.JitCmdv2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JitCmdv2::CopyFrom(const JitCmdv2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.JitCmdv2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JitCmdv2::IsInitialized() const {
  return true;
}

void JitCmdv2::Swap(JitCmdv2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JitCmdv2::InternalSwap(JitCmdv2* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&expr_)->InternalSwap(CastToBase(&other->expr_));
  swap(cmd_, other->cmd_);
  swap(test_value_, other->test_value_);
}

::google::protobuf::Metadata JitCmdv2::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_rgd_2eproto);
  return ::file_level_metadata_rgd_2eproto[kIndexInFileMessages];
}


// ===================================================================

void JitCmd::InitAsDefaultInstance() {
}
class JitCmd::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JitCmd::kCmdFieldNumber;
const int JitCmd::kTestValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JitCmd::JitCmd()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rgd.JitCmd)
}
JitCmd::JitCmd(const JitCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&test_value_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(test_value_));
  // @@protoc_insertion_point(copy_constructor:rgd.JitCmd)
}

void JitCmd::SharedCtor() {
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_value_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(test_value_));
}

JitCmd::~JitCmd() {
  // @@protoc_insertion_point(destructor:rgd.JitCmd)
  SharedDtor();
}

void JitCmd::SharedDtor() {
}

void JitCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JitCmd& JitCmd::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_JitCmd_rgd_2eproto.base);
  return *internal_default_instance();
}


void JitCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.JitCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_value_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(test_value_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* JitCmd::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<JitCmd*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 cmd = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_cmd(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 test_value = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_test_value(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool JitCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rgd.JitCmd)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 test_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &test_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rgd.JitCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rgd.JitCmd)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void JitCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rgd.JitCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmd(), output);
  }

  // int32 test_value = 2;
  if (this->test_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->test_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:rgd.JitCmd)
}

::google::protobuf::uint8* JitCmd::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.JitCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmd(), target);
  }

  // int32 test_value = 2;
  if (this->test_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->test_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.JitCmd)
  return target;
}

size_t JitCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.JitCmd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmd());
  }

  // int32 test_value = 2;
  if (this->test_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->test_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JitCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.JitCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const JitCmd* source =
      ::google::protobuf::DynamicCastToGenerated<JitCmd>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.JitCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.JitCmd)
    MergeFrom(*source);
  }
}

void JitCmd::MergeFrom(const JitCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.JitCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.test_value() != 0) {
    set_test_value(from.test_value());
  }
}

void JitCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.JitCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JitCmd::CopyFrom(const JitCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.JitCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JitCmd::IsInitialized() const {
  return true;
}

void JitCmd::Swap(JitCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JitCmd::InternalSwap(JitCmd* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(cmd_, other->cmd_);
  swap(test_value_, other->test_value_);
}

::google::protobuf::Metadata JitCmd::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_rgd_2eproto);
  return ::file_level_metadata_rgd_2eproto[kIndexInFileMessages];
}


// ===================================================================

void JitRequest::InitAsDefaultInstance() {
}
class JitRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JitRequest::kKindFieldNumber;
const int JitRequest::kBoolvalueFieldNumber;
const int JitRequest::kBitsFieldNumber;
const int JitRequest::kValueFieldNumber;
const int JitRequest::kChildrenFieldNumber;
const int JitRequest::kNameFieldNumber;
const int JitRequest::kIndexFieldNumber;
const int JitRequest::kLabelFieldNumber;
const int JitRequest::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JitRequest::JitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rgd.JitRequest)
}
JitRequest::JitRequest(const JitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      children_(from.children_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&kind_, &from.kind_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&kind_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:rgd.JitRequest)
}

void JitRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_JitRequest_rgd_2eproto.base);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(hash_));
}

JitRequest::~JitRequest() {
  // @@protoc_insertion_point(destructor:rgd.JitRequest)
  SharedDtor();
}

void JitRequest::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JitRequest& JitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_JitRequest_rgd_2eproto.base);
  return *internal_default_instance();
}


void JitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.JitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&kind_)) + sizeof(hash_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* JitRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<JitRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 kind = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_kind(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 boolvalue = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_boolvalue(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 bits = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_bits(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string value = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("rgd.JitRequest.value");
        object = msg->mutable_value();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated .rgd.JitRequest children = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::rgd::JitRequest::_InternalParse;
          object = msg->add_children();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // string name = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("rgd.JitRequest.name");
        object = msg->mutable_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // uint32 index = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_index(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 label = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_label(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 hash = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_hash(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool JitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rgd.JitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 boolvalue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &boolvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bits = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rgd.JitRequest.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rgd.JitRequest children = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_children()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rgd.JitRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 label = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &label_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hash = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rgd.JitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rgd.JitRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void JitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rgd.JitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 kind = 1;
  if (this->kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->kind(), output);
  }

  // uint32 boolvalue = 2;
  if (this->boolvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->boolvalue(), output);
  }

  // uint32 bits = 3;
  if (this->bits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->bits(), output);
  }

  // string value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rgd.JitRequest.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->value(), output);
  }

  // repeated .rgd.JitRequest children = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->children(static_cast<int>(i)),
      output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rgd.JitRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // uint32 index = 7;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->index(), output);
  }

  // uint32 label = 8;
  if (this->label() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->label(), output);
  }

  // uint32 hash = 9;
  if (this->hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:rgd.JitRequest)
}

::google::protobuf::uint8* JitRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.JitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 kind = 1;
  if (this->kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->kind(), target);
  }

  // uint32 boolvalue = 2;
  if (this->boolvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->boolvalue(), target);
  }

  // uint32 bits = 3;
  if (this->bits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->bits(), target);
  }

  // string value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rgd.JitRequest.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->value(), target);
  }

  // repeated .rgd.JitRequest children = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->children(static_cast<int>(i)), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rgd.JitRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // uint32 index = 7;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->index(), target);
  }

  // uint32 label = 8;
  if (this->label() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->label(), target);
  }

  // uint32 hash = 9;
  if (this->hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.JitRequest)
  return target;
}

size_t JitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.JitRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .rgd.JitRequest children = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->children_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->children(static_cast<int>(i)));
    }
  }

  // string value = 4;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kind());
  }

  // uint32 boolvalue = 2;
  if (this->boolvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->boolvalue());
  }

  // uint32 bits = 3;
  if (this->bits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bits());
  }

  // uint32 index = 7;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // uint32 label = 8;
  if (this->label() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->label());
  }

  // uint32 hash = 9;
  if (this->hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.JitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JitRequest* source =
      ::google::protobuf::DynamicCastToGenerated<JitRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.JitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.JitRequest)
    MergeFrom(*source);
  }
}

void JitRequest::MergeFrom(const JitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.JitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.kind() != 0) {
    set_kind(from.kind());
  }
  if (from.boolvalue() != 0) {
    set_boolvalue(from.boolvalue());
  }
  if (from.bits() != 0) {
    set_bits(from.bits());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.label() != 0) {
    set_label(from.label());
  }
  if (from.hash() != 0) {
    set_hash(from.hash());
  }
}

void JitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.JitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JitRequest::CopyFrom(const JitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.JitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JitRequest::IsInitialized() const {
  return true;
}

void JitRequest::Swap(JitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JitRequest::InternalSwap(JitRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&children_)->InternalSwap(CastToBase(&other->children_));
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(kind_, other->kind_);
  swap(boolvalue_, other->boolvalue_);
  swap(bits_, other->bits_);
  swap(index_, other->index_);
  swap(label_, other->label_);
  swap(hash_, other->hash_);
}

::google::protobuf::Metadata JitRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_rgd_2eproto);
  return ::file_level_metadata_rgd_2eproto[kIndexInFileMessages];
}


// ===================================================================

void JitReply::InitAsDefaultInstance() {
}
class JitReply::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JitReply::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JitReply::JitReply()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:rgd.JitReply)
}
JitReply::JitReply(const JitReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:rgd.JitReply)
}

void JitReply::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_JitReply_rgd_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

JitReply::~JitReply() {
  // @@protoc_insertion_point(destructor:rgd.JitReply)
  SharedDtor();
}

void JitReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JitReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JitReply& JitReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_JitReply_rgd_2eproto.base);
  return *internal_default_instance();
}


void JitReply::Clear() {
// @@protoc_insertion_point(message_clear_start:rgd.JitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* JitReply::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<JitReply*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("rgd.JitReply.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool JitReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rgd.JitReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rgd.JitReply.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rgd.JitReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rgd.JitReply)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void JitReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rgd.JitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rgd.JitReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:rgd.JitReply)
}

::google::protobuf::uint8* JitReply::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:rgd.JitReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rgd.JitReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rgd.JitReply)
  return target;
}

size_t JitReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rgd.JitReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JitReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rgd.JitReply)
  GOOGLE_DCHECK_NE(&from, this);
  const JitReply* source =
      ::google::protobuf::DynamicCastToGenerated<JitReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rgd.JitReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rgd.JitReply)
    MergeFrom(*source);
  }
}

void JitReply::MergeFrom(const JitReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rgd.JitReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void JitReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rgd.JitReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JitReply::CopyFrom(const JitReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rgd.JitReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JitReply::IsInitialized() const {
  return true;
}

void JitReply::Swap(JitReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JitReply::InternalSwap(JitReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata JitReply::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_rgd_2eproto);
  return ::file_level_metadata_rgd_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rgd
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::rgd::JitCmdv2* Arena::CreateMaybeMessage< ::rgd::JitCmdv2 >(Arena* arena) {
  return Arena::CreateInternal< ::rgd::JitCmdv2 >(arena);
}
template<> PROTOBUF_NOINLINE ::rgd::JitCmd* Arena::CreateMaybeMessage< ::rgd::JitCmd >(Arena* arena) {
  return Arena::CreateInternal< ::rgd::JitCmd >(arena);
}
template<> PROTOBUF_NOINLINE ::rgd::JitRequest* Arena::CreateMaybeMessage< ::rgd::JitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::rgd::JitRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::rgd::JitReply* Arena::CreateMaybeMessage< ::rgd::JitReply >(Arena* arena) {
  return Arena::CreateInternal< ::rgd::JitReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
